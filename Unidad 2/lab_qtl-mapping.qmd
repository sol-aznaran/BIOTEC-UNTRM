---
title: "Build a genetic map (r/qtl) and Plot Linkage Group Maps with Quantitative Trait (LinkageMapView)"
author: "Flavio Lozano-Isla"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  warning: false
---

```{r}
#| label: setup
#| include: false

source("https://inkaverse.com/docs.r")
knitr::opts_chunk$set(echo = T)

cran <- c("qtl", "LinkageMapView")

suppressPackageStartupMessages({
  for (pkg in cran) { 
    if( !require(pkg, character.only = T) ) {
      install.packages(pkg)
      library(pkg, character.only = T)
    } 
  }
  remove(cran, pkg)
})
```

# Referencias

```{r}
#| eval: false
#| echo: true

browseURL("https://cran.r-project.org/package=qtl")
browseURL("https://cran.r-project.org/package=LinkageMapView")
browseURL("https://rqtl.org/tutorials/geneticmaps.pdf")
```

# Base de datos

Base de datos de un experimento de hipertensión en ratones.

> Sugiyama, F., Churchill, G. A., Higgens, D. C., Johns, C., Makaritsis, K. P., Gavras, H. and Paigen, B. (2001) Concordance of murine quantitative trait loci for salt-induced hypertension with rat and human loci. Genomics 71, 70–77.

- Diseño genético: backcross
- Individuos: 250 ratones machos
- Marcadores: 174
- Fenotipo: presión sanguinea 

```{r}
data(hyper)
hyper <- drop.nullmarkers(hyper)
summary(hyper)
plotRF(hyper)
plotMap(hyper, show.marker.names=TRUE)
```

# Generate linkage map

```{r}
#| out-height: "600px"

outfile  <- file.path(getwd(), "gmapi.pdf")
lmv.linkage.plot(hyper, outfile
                 # , mapthese = c(1,4,6,15) 
                 , main = "Genetic Map"
                 , lgperrow = 5
                 )
outfile %>% knitr::include_graphics()
```

# Genetic map construction

## Base de datos

Base de datos simulado de 300 individuos en F2 con 100 marcadores en 5 cromosomas (grupos de recombinación ~ cromosomas).

FR <= 50%

```{r}
data(mapthis)
summary(mapthis)
```

## Frecuencia de recombinación inicial

```{r}
plotRF(mapthis)
```

- Muchos marcadores no estan alineados dentro de su grupo de recombinación (cromosoma).

```{r}
plotMissing(mapthis)
par(mfrow=c(1,2), las=1)
plot(ntyped(mapthis)
     , ylab="No. typed markers"
     , main="No. genotypes by individual")
plot(ntyped(mapthis, "mar")
     , ylab="No. typed individuals"
     , main="No. genotypes by marker")
```

- Hay 6 genotipos por individuos faltantes
- Hay 4 genotipos por marcadores faltantes 

## Omitir genotipos x individuo faltantes

```{r}
mapthis <- subset(mapthis, ind=(ntyped(mapthis)>50))

nt.bymar <- ntyped(mapthis, "mar")
todrop <- names(nt.bymar[nt.bymar < 200])
mapthis <- drop.markers(mapthis, todrop)

par(mfrow=c(1,2), las=1)
plot(ntyped(mapthis)
     , ylab="No. typed markers"
     , main="No. genotypes by individual")
plot(ntyped(mapthis, "mar")
     , ylab="No. typed individuals"
     , main="No. genotypes by marker")
```

## Identificar individuos duplicados

```{r}
cg <- comparegeno(mapthis)
hist(cg[lower.tri(cg)]
     , breaks=seq(0, 1, len=101)
     , xlab="No. matching genotypes")
rug(cg[lower.tri(cg)])
```

## Omitir individuos duplicados

```{r}
wh <- which(cg > 0.9, arr=TRUE)
wh <- wh[wh[,1] < wh[,2],]
g <- pull.geno(mapthis)

for(i in 1:nrow(wh)) {
  tozero <- !is.na(g[wh[i,1],]) & !is.na(g[wh[i,2],]) & g[wh[i,1],] != g[wh[i,2],]
  mapthis$geno[[1]]$data[wh[i,1],tozero] <- NA
}

mapthis <- subset(mapthis, ind=-wh[,2])

cg <- comparegeno(mapthis)
hist(cg[lower.tri(cg)]
     , breaks=seq(0, 1, len=101)
     , xlab="No. matching genotypes")
rug(cg[lower.tri(cg)])
```

## Marcadores duplicados

```{r}
print(dup <- findDupMarkers(mapthis, exact.only=FALSE))
```

- No existen marcadores duplicados

## Marcadores con patrones de segregación distorsionados

```{r}
gt <- geno.table(mapthis)
gt
gt[gt$P.value < 0.05/totmar(mapthis),]
```

- Marcador C4M2 esta regular
- Entre los marcador el C2M9 y C2M15 son monomorficos --> omitirlos

```{r}
todrop <- rownames(gt[gt$P.value < 1e-10,])
print(todrop) # marcadores omitidos
mapthis <- drop.markers(mapthis, todrop)
gt <- geno.table(mapthis)
```

## Estudio de las frecuencia genotipicas

```{r}
g <- pull.geno(mapthis)
gfreq <- apply(g, 1, function(a) table(factor(a, levels=1:3)))
gfreq <- t(t(gfreq) / colSums(gfreq))

par(mfrow=c(1,3), las=1)
for(i in 1:3)
  plot(gfreq[i,]
       , ylab="Genotype frequency"
       , main=c("AA", "AB", "BB")[i]
       , ylim=c(0,1))
```

# Construcción de mapa genético

- Despues de cumplir todo los supuestos
- Estamos listos para construir el mapa genetico

## Vínculos de marcadores por pares

```{r}
mapthis <- est.rf(mapthis)
checkAlleles(mapthis, threshold = 5)
```

La diferencia entre la puntuación máxima del LOD para los casos en los que la fracción de recombinación estimada es > 1/2 y la máxima puntuación LOD para los casos en los que la fracción de recombinación estimada es < 1/2.

## LOD vs RF

```{r}
rf <- pull.rf(mapthis)
lod <- pull.rf(mapthis, what="lod")
plot(as.numeric(rf)
     , as.numeric(lod)
     , xlab="Recombination fraction"
     , ylab="LOD score")
```

- Existen varios marcadores con FR > 1/2

## Formación de grupos iniciales de ligamiento

```{r}
lg <- formLinkageGroups(mapthis, max.rf=0.35, min.lod=6)
table(lg[,2])
```

- Se formaron 11 grupos pero existen 5 chromosomes

## Reorganizamos los marcadores entre lo grupos

```{r}
mapthis  <- formLinkageGroups(mapthis
                              , max.rf=0.35
                              , min.lod=6
                              , reorgMarkers=TRUE)

plotRF(mapthis, alternate.chrid=TRUE)
```

- izquierda superior --> RF
- derecha inferior --> LOD

## Reordenar grupos

```{r}
toswitch <- markernames(mapthis, chr=c(5, 7:11))
mapthis <- switchAlleles(mapthis, toswitch)
mapthis <- est.rf(mapthis)
plotRF(mapthis, alternate.chrid=TRUE)

rf <- pull.rf(mapthis)
lod <- pull.rf(mapthis, what="lod")
plot(as.numeric(rf), as.numeric(lod)
     , xlab="Recombination fraction", ylab="LOD score")
```

- Las fracciones de recombinación ahora estan en su mayoria <1/2 (0.5)

```{r}
lg <- formLinkageGroups(mapthis, max.rf=0.35, min.lod=6)
table(lg[,2])
```

## Reorganizar los marcadores

```{r}
mapthis <- formLinkageGroups(
  mapthis, max.rf=0.35, min.lod=6, reorgMarkers=TRUE)

plotRF(mapthis)
```

- Ahora estan en 5 grupos de recombinación ==> 5 cromosomas

## Ordenar marcadores

- Iniciar con el cromosoma con menor número de marcadores

```{r}
mapthis <- orderMarkers(mapthis, chr=5)
pull.map(mapthis, chr=5)
rip5 <- ripple(mapthis, chr=5, window=7)

# rip5lik <- ripple(mapthis, chr=5, window=4
#                   , method="likelihood"
#                   , error.prob=0.005)
#Metodo estadistico que usa probabilidad para el orden

summary(rip5)

mapthis <- orderMarkers(mapthis, chr=4)
pull.map(mapthis, chr=4)
rip4 <- ripple(mapthis, chr=4, window=7)
# rip4lik <- ripple(mapthis, chr=4, window=4
#                   , method="likelihood"
#                   , error.prob=0.005)

mapthis <- orderMarkers(mapthis, chr=3)
pull.map(mapthis, chr=3)
rip3 <- ripple(mapthis, chr=3, window=7)
# rip3lik <- ripple(mapthis, chr=3, window=4
#                   , method="likelihood"
#                   , error.prob=0.005)

mapthis <- orderMarkers(mapthis, chr=2)
pull.map(mapthis, chr=2)
rip2 <- ripple(mapthis, chr=2, window=7)
# rip2lik <- ripple(mapthis, chr=2, window=4, method="likelihood"
#                   , error.prob=0.005)

mapthis <- orderMarkers(mapthis, chr=1)
pull.map(mapthis, chr=1)
rip1 <- ripple(mapthis, chr=1, window=7)
# rip1lik <- ripple(mapthis, chr=1, window=4, method="likelihood"
#                   , error.prob=0.005)
```

## Mapa genético

```{r}
summaryMap(mapthis)
plotRF(mapthis)
plotMap(mapthis, show.marker.names=TRUE)
```

- El paquete nativamente no tiene una buena representación gráfica.

## LinkageMapView

```{r}
#| out-height: "500px"

outfile  <- file.path(getwd(), "gmapf.pdf")

lmv.linkage.plot(
  mapthis, outfile
  , main = "Genetic Map"  
)
outfile %>% knitr::include_graphics()
```

# Plot grid

```{r}
library(dplyr)
library(cowplot)

p1 <- ~{
  par(
    mar = c(3, 3, 1, 1), 
    mgp = c(2, 1, 0)
  )
plotRF(hyper)
}

p2 <- ~{
  par(
    mar = c(3, 3, 1, 1), 
    mgp = c(2, 1, 0)
  )
plot(as.numeric(rf)
     , as.numeric(lod)
     , xlab="Recombination fraction"
     , ylab="LOD score")
}

list(p1, p2) %>% 
  plot_grid(plotlist = .
            , labels = "AUTO"
            ) %>% 
  ggsave2("figures/genetic-map.png", plot = .
          , width = 40, height = 15, units = "cm")
```

